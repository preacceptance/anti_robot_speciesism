detected_bot = mention_bot(q2)
) -> df
# Chi-Square Test
## Detected AI
table(df$detected_bot)
prop.table(table(df$detected_bot))
chisq.test(table(df$detected_bot))
## Interest
table(df$interest_1)
prop.table(table(df$interest_1))
chisq.test(table(df$interest_1))
## Meet
table(df$meeting)
prop.table(table(df$meeting))
chisq.test(table(df$meeting))
rm(list = ls())
library(psych)
library(effsize)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #set working directory to current directory
n <- read.csv ("s1_data_effect.csv", header=T, sep=",")
## Demographics
table(n$gender)
mean(n$age, na.rm=T)
n [c(18:20)
n [c(18:20)]
n[c(18:20)]
## r value between the ratings
alpha(n [c(18:20)], check.keys = TRUE)
n$perfect_1
## Average the ratings
n$perfect<-10-(n$perfect_1 + n$perfect_2 + n$perfect_3)/3
n$imperfect<-10-(n$imperfect_1 + n$imperfect_2 + n$imperfect_3)/3
n$human<-10-(n$human_1 + n$human_2 + n$human_3)/3
## t-tests of differences in means
t.test(n$perfect, n$imperfect)
cohen.d(n$perfect, n$imperfect, na.rm = T)
t.test(n$perfect, n$human)
cohen.d(n$perfect, n$human, na.rm = T)
rm(list = ls())
library(tidyverse)
library(psych)
library(effsize)
library(boot)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #set working directory to current directory
p <- read.csv ("s2_data_mediation.csv", header=T, sep=",")
## r value between soul_1 and conscious_1
alpha(p[c(19:20)], check.keys = TRUE)
## Average the measures
p$int<-(p$soul_1+p$conscious_1)/2
## Create variable for condition
p$cond[p$I==1]<-"I"
p$cond[p$P==1]<-"P"
p$cond[p$H==1]<-"H"
table(p$cond)
## t-tests
### Compare Cashier Comfort between the three conditions
t.test(p[p$cond == "I",]$cashier_1 ,p[p$cond == "P",]$cashier_1)
## t-tests
### Compare Cashier Comfort between the three conditions
t.test(p[p$cond == "I",]$cashier_1 ,p[p$cond == "P",]$cashier_1)
cohen.d(p[p$cond == "I",]$cashier_1 ,p[p$cond == "P",]$cashier_1)
t.test(p[p$cond == "P",]$cashier_1 ,p[p$cond == "H",]$cashier_1)
cohen.d(p[p$cond == "P",]$cashier_1 ,p[p$cond == "H",]$cashier_1)
t.test(p[p$cond == "P",]$cashier_1 ,p[p$cond == "H",]$cashier_1)
cohen.d(p[p$cond == "P",]$cashier_1 ,p[p$cond == "H",]$cashier_1)
## Compare intangible qualities between the three conditions
t.test(p[p$cond == "I",]$int ,p[p$cond == "P",]$int)
## Compare intangible qualities between the three conditions
t.test(p[p$cond == "I",]$int ,p[p$cond == "P",]$int)
cohen.d(p[p$cond == "I",]$int ,p[p$cond == "P",]$int, na.rm=T)
## Compare intangible qualities between the three conditions
t.test(p[p$cond == "I",]$int ,p[p$cond == "P",]$int)
cohen.d(p[p$cond == "I",]$int ,p[p$cond == "P",]$int, na.rm=T)
t.test(p[p$cond == "P",]$int ,p[p$cond == "H",]$int)
t.test(p[p$cond == "P",]$int ,p[p$cond == "H",]$int)
cohen.d(p[p$cond == "P",]$int ,p[p$cond == "H",]$int, na.rm=T)
## Correlation test between comfort and intangible qualities
### All condition
cor.test(p$cashier_1, p$int)
### Exclude "Human" condition
cor.test(p[p$cond != "H",]$cashier_1, p[p$cond != "H",]$int)
## Simple Mediation Analysis
model.name <- function(d, i){q <- d[i,]
return((lm(q$int ~ q$cond)$coef[2])*
(lm(q$cashier_1 ~ q$int + q$cond)$coef[2]))}
ind <- boot(p, model.name, R=1000); ind
boot.ci(ind, type = "bca", conf = 0.95)
## Exclude participants that noticed it was a robot
p <- subset(p, exclude==0)
## t-test post exclusion
t.test(p[p$cond == "P",]$cashier_1 ,p[p$cond == "H",]$cashier_1)
## t-test post exclusion
t.test(p[p$cond == "P",]$cashier_1 ,p[p$cond == "H",]$cashier_1)
cohen.d(p[p$cond == "P",]$cashier_1 ,p[p$cond == "H",]$cashier_1, na.rm=T)
## t-test post exclusion
t.test(p[p$cond == "P",]$cashier_1 ,p[p$cond == "H",]$cashier_1)
cohen.d(p[p$cond == "P",]$cashier_1 ,p[p$cond == "H",]$cashier_1, na.rm=T)
t.test(p[p$cond == "P",]$cashier_1 ,p[p$cond == "I",]$cashier_1)
cohen.d(p[p$cond == "P",]$cashier_1 ,p[p$cond == "I",]$cashier_1, na.rm=T)
rm(list = ls())
rm(list = ls())
library(tidyverse)
library(psych)
library(effsize)
library(ltm)
library(boot)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #set working directory to current directory
p <- read.csv ("s3_data_serialMediation.csv", header=T, sep=",")
table(p$condition)
## Cronbach Alphas for the measures
cronbach.alpha(p[,c("comfort_1", "likely_1", "service_1")])
cronbach.alpha(p[,c("organism_1", "bio_1")])
cronbach.alpha(p[,c("soul_1", "conscious_1", "empathy_1", "grow_1", "meaning_1")], na.rm = T)
## Average the measures
p$int <- (p$soul_1+p$conscious_1+p$empathy_1+p$grow_1+p$meaning_1)/5
p$dv <- (p$comfort_1 + p$likely_1 + p$service_1)/3
p$bio <- (p$organism_1+p$bio_1)/2
## T-test
### Service Quality
t.test(p[p$condition == "robot",]$dv, p[p$condition == "person",]$dv)
cohen.d(p[p$condition == "robot",]$dv, p[p$condition == "person",]$dv)
### Intuitions in Biology
t.test(p[p$condition == "robot",]$bio, p[p$condition == "person",]$bio)
cohen.d(p[p$condition == "robot",]$bio, p[p$condition == "person",]$bio)
### Intangible Qualities
t.test(p[p$condition == "robot",]$int, p[p$condition == "person",]$int)
cohen.d(p[p$condition == "robot",]$int, p[p$condition == "person",]$int, na.rm = T)
## Regression Analysis
### Intangible Qualities predicted by Intuitions in Biology
summary(lm(int ~ bio, p))
### Service Quality predicted by Intangible Qualities
summary(lm(dv ~ int, p))
## Serial Mediation
model.name <- function(d, i){q <- d[i,]
return((lm(q$bio ~ q$condition)$coef[2])*
(lm(q$int ~ q$bio + q$condition)$coef[2])*
(lm(q$dv ~ q$int + q$bio + q$condition)$coef[2]))}
ind <- boot(p, model.name, R=1000); ind
boot.ci(ind, type = "bca", conf = 0.95)
condition
p$condition
## T-test
### Service Quality
t.test(p[p$condition == "robot",]$dv, p[p$condition == "person",]$dv)
p$condition
## Regression Analysis (2)
### Service Quality predicted by condition
summary(lm(dv ~ condition, p))
### with mediators as covariates
summary(lm(dv ~ condition + int + bio, p))
### Service Quality predicted by Intuitions in Biology
summary(lm(dv ~ bio, p))
rm(list = ls())
library(effsize)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #set working directory to current directory
c <- read.csv ("s4_data_intervention.csv", header=T, sep=",")
## Demographics
mean(c$age, na.rm=T)
prop.table(table(c$gender))
rm(list = ls())
library(effsize)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #set working directory to current directory
c <- read.csv ("s4_data_intervention.csv", header=T, sep=",")
## Demographics
mean(c$age, na.rm=T)
prop.table(table(c$gender))
## Recode Condition
c$cond[c$FL_31_DO_yes==1] <- "conscious"
c$cond[c$FL_31_DO_no==1] <- "not"
head(c)
colnames(c)
## T-tests based on Table 1
t.test(c[c$cond != "conscious",]$engaging_1, c[c$cond == "conscious",]$engaging_1)
t.test(c[c$cond != "conscious",]$convincing_1, c[c$cond == "conscious",]$convincing_1)
t.test(c[c$cond != "conscious",]$knowledgeable_1, c[c$cond == "conscious",]$knowledgeable_1)
t.test(c[c$cond != "conscious",]$MC_1, c[c$cond == "conscious",]$MC_1)
t.test(c[c$cond != "conscious",]$knowledgeable_1, c[c$cond == "conscious",]$knowledgeable_1)
t.test(c[c$cond != "conscious",]$MC_1, c[c$cond == "conscious",]$MC_1)
t.test(c[c$cond != "conscious",]$store_1, c[c$cond == "conscious",]$store_1)
t.test(c[c$cond != "conscious",]$restaurant_1, c[c$cond == "conscious",]$restaurant_1)
t.test(c[c$cond != "conscious",]$companion_1, c[c$cond == "conscious",]$companion_1)
t.test(c[c$cond != "conscious",]$safety_1, c[c$cond == "conscious",]$safety_1)
t.test(c[c$cond != "conscious",]$job_1, c[c$cond == "conscious",]$job_1)
t.test(c[c$cond != "conscious",]$distinctiveness_1, c[c$cond == "conscious",]$distinctiveness_1)
rm(list = ls())
library(tidyverse)
library(ltm)
library(Hmisc)
library(interactions)
library(sandwich)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #set working directory to current directory
d <- read_csv("s5a data.csv")
d <- d[-c(1,2),]
dim(d)
rm(list = ls())
library(tidyverse)
library(ltm)
library(Hmisc)
library(interactions)
library(sandwich)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #set working directory to current directory
d <- read_csv("s5a data.csv")
d <- d[-c(1,2),]
p <- read_csv("s5a data part 2.csv")
p <- p[-c(1,2),]
names(d)
d %>%
filter(Q1 == 2, Q2 == 1) %>%
mutate(
s1 = as.numeric(s1),
s2 = as.numeric(s2),
s3 = as.numeric(s3),
s4r = 8 - as.numeric(s4r),
mod = (s1 + s2 + s3 + s4r) / 4
) -> d
cronbach.alpha(d[,c("s1",'s2','s3','s4r')])
dim(d)
p %>%
filter(Q2 == 2) %>%
left_join(d, by = "PROLIFIC_PID") %>%
mutate_if(all.is.numeric, as.numeric) -> p
s <- p %>%
mutate(
cond = scenarios_DO,
dv = case_when(
cond == "surprise" ~ (comf2_1 + likely2_1 + recommend2_1)/3,
cond != "surprise" ~ (comfort_1 + likely_1 + recommend_1)/3
)
)
rm(list = ls())
library(tidyverse)
library(ltm)
library(Hmisc)
library(interactions)
library(sandwich)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #set working directory to current directory
d <- read_csv("s5a data.csv")
d <- d[-c(1,2),]
p <- read_csv("s5a data part 2.csv")
p <- p[-c(1,2),]
names(d)
d %>%
filter(Q1 == 2, Q2 == 1) %>%
mutate(
s1 = as.numeric(s1),
s2 = as.numeric(s2),
s3 = as.numeric(s3),
s4r = 8 - as.numeric(s4r),
mod = (s1 + s2 + s3 + s4r) / 4
) -> d
cronbach.alpha(d[,c("s1",'s2','s3','s4r')])
d <- d[,c("PROLIFIC_PID","mod","s1",'s2','s3','s4r')]
p %>%
filter(Q2 == 2) %>%
left_join(d, by = "PROLIFIC_PID") %>%
mutate_if(all.is.numeric, as.numeric) -> p
dim(p)
cronbach.alpha(s[,c("likely_1", "recommend_1", "comfort_1")])
rm(list = ls())
library(tidyverse)
library(ltm)
library(Hmisc)
library(interactions)
library(sandwich)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #set working directory to current directory
d <- read_csv("s5a data.csv")
d <- d[-c(1,2),]
p <- read_csv("s5a data part 2.csv")
p <- p[-c(1,2),]
names(d)
d %>%
filter(Q1 == 2, Q2 == 1) %>%
mutate(
s1 = as.numeric(s1),
s2 = as.numeric(s2),
s3 = as.numeric(s3),
s4r = 8 - as.numeric(s4r),
mod = (s1 + s2 + s3 + s4r) / 4
) -> d
cronbach.alpha(d[,c("s1",'s2','s3','s4r')])
d <- d[,c("PROLIFIC_PID","mod","s1",'s2','s3','s4r')]
p %>%
filter(Q2 == 2) %>%
left_join(d, by = "PROLIFIC_PID") %>%
mutate_if(all.is.numeric, as.numeric) -> p
s <- p %>%
mutate(
cond = scenarios_DO,
dv = case_when(
cond == "surprise" ~ (comf2_1 + likely2_1 + recommend2_1)/3,
cond != "surprise" ~ (comfort_1 + likely_1 + recommend_1)/3
)
)
cronbach.alpha(s[,c("likely_1", "recommend_1", "comfort_1")])
s %>%
filter(!(is.na(s$P) & is.na(s$H) & is.na(s$surprise)), # Remove if responded to none of the three items
ResponseId != "R_XnpqkIlmsKFmJQl" # dropped the repeated participant
) -> s
dim(s)
t.test(s[s$cond == "P",]$ease, s[s$cond == "H",]$ease)
rm(list = ls())
library(tidyverse)
library(ltm)
library(Hmisc)
library(interactions)
library(sandwich)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #set working directory to current directory
d <- read_csv("s5a data.csv")
d <- d[-c(1,2),]
p <- read_csv("s5a data part 2.csv")
p <- p[-c(1,2),]
names(d)
d %>%
filter(Q1 == 2, Q2 == 1) %>%
mutate(
s1 = as.numeric(s1),
s2 = as.numeric(s2),
s3 = as.numeric(s3),
s4r = 8 - as.numeric(s4r),
mod = (s1 + s2 + s3 + s4r) / 4
) -> d
cronbach.alpha(d[,c("s1",'s2','s3','s4r')])
d <- d[,c("PROLIFIC_PID","mod","s1",'s2','s3','s4r')]
p %>%
filter(Q2 == 2) %>%
left_join(d, by = "PROLIFIC_PID") %>%
mutate_if(all.is.numeric, as.numeric) -> p
s <- p %>%
mutate(
cond = scenarios_DO,
dv = case_when(
cond == "surprise" ~ (comf2_1 + likely2_1 + recommend2_1)/3,
cond != "surprise" ~ (comfort_1 + likely_1 + recommend_1)/3
)
)
cronbach.alpha(s[,c("likely_1", "recommend_1", "comfort_1")])
s %>%
filter(!(is.na(s$P) & is.na(s$H) & is.na(s$surprise)), # Remove if responded to none of the three items
ResponseId != "R_XnpqkIlmsKFmJQl" # dropped the repeated participant
) -> s
## Ease
s$ease <- (s$easy_1 + s$confident_1)/2
t.test(s[s$cond == "P",]$ease, s[s$cond == "H",]$ease)
t.test(s[s$cond == "H",]$ease, s[s$cond == "surprise",]$ease)
cohen.d(s[s$cond == "P",]$ease, s[s$cond == "H",]$ease)
cohen.d(s[s$cond == "H",]$ease, s[s$cond == "surprise",]$ease)
t.test(s[s$cond == "H",]$ease, s[s$cond == "surprise",]$ease)
cohen.d(s[s$cond == "H",]$ease, s[s$cond == "surprise",]$ease)
cohen.d(s[s$cond == "H",]$ease, s[s$cond == "surprise",]$ease, na.rm=TRUE)
s[s$cond == "surprise",]$ease
## Service Evaluations
t.test(s[s$cond == "P",]$dv, s[s$cond == "H",]$dv)
## Service Evaluations
t.test(s[s$cond == "P",]$dv, s[s$cond == "H",]$dv)
cohen.d(s[s$cond == "P",]$dv, s[s$cond == "H",]$dv)
## Service Evaluations
t.test(s[s$cond == "P",]$dv, s[s$cond == "H",]$dv)
cohen.d(s[s$cond == "P",]$dv, s[s$cond == "H",]$dv)
t.test(s[s$cond == "H",]$dv, s[s$cond == "surprise",]$dv)
cohen.d(s[s$cond == "H",]$dv, s[s$cond == "surprise",]$dv)
t.test(s[s$cond == "surprise",]$dv, s[s$cond == "P",]$dv)
t.test(s[s$cond == "H",]$dv, s[s$cond == "surprise",]$dv)
t.test(s[s$cond == "surprise",]$dv, s[s$cond == "P",]$dv)
cohen.d(s[s$cond == "surprise",]$dv, s[s$cond == "P",]$dv)
#floodlight
s2<-subset(s, cond!="surprise")
s2$cond2[s2$cond=="H"]<-0
s2$cond2[s2$cond=="P"]<-1
## Interaction Regression
s$cond <- relevel(as.factor(s$cond), ref = "H")
summary(lm(dv ~ cond * mod, s))
#floodlight
s2<-subset(s, cond!="surprise")
s2$cond2[s2$cond=="H"]<-0
s2$cond2[s2$cond=="P"]<-1
s$cond <- relevel(as.factor(s$cond), ref = "H")
summary(lm(dv ~ cond * mod, s))
#floodlight
s2<-subset(s, cond!="surprise")
s2$cond2[s2$cond=="H"]<-0
s2$cond2[s2$cond=="P"]<-1
m1 <- lm(dv ~ cond2 * mod, data = s2)
summary(m1)
sim_slopes(m1, pred = cond2, modx = mod, jnplot = TRUE)
m1 <- lm(dv ~ cond2 * mod, data = s2)
rm(list=ls())
library(tidyverse)
library(psych)
library(effsize)
library(ltm)
library(sjstats)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #set working directory to current directory
h <- read.csv ("s5b_data_mechanical.csv", header=T, sep=",")
dim(h)
## Demographics
mean(c$age, na.rm=T)
## Demographics
mean(h$age, na.rm=T)
rm(list=ls())
library(tidyverse)
library(psych)
library(effsize)
library(ltm)
library(sjstats)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #set working directory to current directory
h <- read.csv ("s5b_data_mechanical.csv", header=T, sep=",")
## Demographics
mean(h$age, na.rm=T)
colnames(h)
head(age)
head(h)
rm(list=ls())
library(tidyverse)
library(psych)
library(effsize)
library(ltm)
library(sjstats)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #set working directory to current directory
h <- read.csv ("s5b_data_mechanical.csv", header=T, sep=",")
## Code conditions
h$huro[h$roMa.1==2|h$roNu.1==2] <- "robot"
h$huro[h$huMa.1==1|h$huNu.1==1] <- "human"
h$job[h$roMa.1==2|h$huMa.1==1] <- "machine"
h$job[h$roNu.1==2|h$huNu.1==1] <- "nurse"
## r-value for comfort_1 and likely_1
alpha(h[,c("comfort_1", "likely_1")], check.keys = TRUE)
## ANOVA analysis
a <- aov(dv ~ as.factor(huro) * as.factor(job), data = h)
rm(list=ls())
library(tidyverse)
library(psych)
library(effsize)
library(ltm)
library(sjstats)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #set working directory to current directory
h <- read.csv ("s5b_data_mechanical.csv", header=T, sep=",")
## Code conditions
h$huro[h$roMa.1==2|h$roNu.1==2] <- "robot"
h$huro[h$huMa.1==1|h$huNu.1==1] <- "human"
h$job[h$roMa.1==2|h$huMa.1==1] <- "machine"
h$job[h$roNu.1==2|h$huNu.1==1] <- "nurse"
## r-value for comfort_1 and likely_1
alpha(h[,c("comfort_1", "likely_1")], check.keys = TRUE)
## Average measures
h$dv <- (h$comfort_1 + h$likely_1)/2
## ANOVA analysis
a <- aov(dv ~ as.factor(huro) * as.factor(job), data = h)
summary(a)
## ANOVA analysis
a <- aov(dv ~ as.factor(huro) * as.factor(job), data = h)
summary(a)
eta_squared(a)
## ANOVA analysis
a <- aov(dv ~ as.factor(huro) * as.factor(job), data = h)
summary(a)
eta_squared(a)
library(rstatix)
## ANOVA analysis
a <- aov(dv ~ as.factor(huro) * as.factor(job), data = h)
summary(a)
eta_squared(a)
## ANOVA analysis
a <- aov(dv ~ as.factor(huro) * as.factor(job), data = h)
summary(a)
eta_squared(a)
eta_squared(a)
## t-tests
### Robot v. Human
t.test(h[h$huro == "robot",]$dv, h[h$huro == "human",]$dv)
cohen.d(h[h$huro == "robot",]$dv, h[h$huro == "human",]$dv)
### Mechanic v. Nurse
t.test(h[h$job == "machine",]$dv, h[h$job == "nurse",]$dv)
## Proportion of participants rating that it is easy to imagine
prop.table(table(h$easy_1 >= 5))
prop.table(table(h$easy_1 >= 7))
## Proportion of participants rating that it is easy to imagine
prop.table(table(h$easy_1 >= 5))
rm(list=ls())
library(tidyverse)
library(effsize)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #set working directory to current directory
h <- read.csv ("s5c_data_robotBenefits.csv", header=T, sep=",")
## Recoding Condition
h$group[h$human.1==1] <- "human"
h$group[h$bot.1==1] <- "robot"
h$group[h$benefits.1==1] <- "robotB"
table(h$group)
## Average measures
h$dv<-(h$comfort_1+h$likely_1)/2
dim(h)
head(h)
rm(list=ls())
library(tidyverse)
library(effsize)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path)) #set working directory to current directory
h <- read.csv ("s5c_data_robotBenefits.csv", header=T, sep=",")
## Recoding Condition
h$group[h$human.1==1] <- "human"
h$group[h$bot.1==1] <- "robot"
h$group[h$benefits.1==1] <- "robotB"
table(h$group)
## Average measures
h$dv<-(h$comfort_1+h$likely_1)/2
## t-tests
### Human v. Robot
t.test(h[h$group == "human",]$dv, h[h$group == "robot",]$dv)
cohen.d(h[h$group == "human",]$dv, h[h$group == "robot",]$dv)
### Robot v. Robot with benefits
t.test(h[h$group == "robot",]$dv, h[h$group == "robotB",]$dv)
### Robot v. Robot with benefits
t.test(h[h$group == "robot",]$dv, h[h$group == "robotB",]$dv)
cohen.d(h[h$group == "robot",]$dv, h[h$group == "robotB",]$dv)
